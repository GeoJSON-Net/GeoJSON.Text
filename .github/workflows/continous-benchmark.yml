name: Run benchmark
on:
  pull_request:
    branches: [ main ]

jobs:
  benchmark:
    name: Continuous benchmarking
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
      # Run benchmark with `go test -bench` and stores the output to a file
      - name: Run benchmark
        run:  dotnet run --project ./GeoJSON.Text.Test.Benchmark/GeoJSON.Text.Test.Benchmark.csproj --framework net6 --runtimes net60 -c Release -- --job medium -f *SerializeAndDeserialize*
      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: Happypig375/github-action-benchmark@v1
        with:
          # What benchmark tool the output.txt came from
          tool: 'benchmarkdotnet'
          # Where the output from the benchmark tool is stored
          output-file-path: 'src/BenchmarkDotNet.Artifacts/results/GeoJSON.Text.Test.Benchmark.SerializeAndDeserialize-report-full.json'
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Will comment on pull request when an alert happens
          comment-always: true
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
        # Upload the updated cache file for the next job by actions/cache
        # Run `github-action-benchmark` action